Demo Passing Data Mirip Halaman Tag Dev.To

===============================

contoh code nya :

index.js :

const express = require("express");
const app = express();

// Set mesin template EJS
app.set("view engine", "ejs");

// Data posting yang menyerupai halaman tag di DEV Community
const tagPosts = [
  {
    tag: "webdev",
    title:
      "The Ultimate Guide to Styling with CSS-in-JS Using Styled Components",
    author: "Vinyl-Davyl",
    date: "May 13",
    reactions: 18,
    comments: 2,
    readTime: 7,
  },
  {
    tag: "ai",
    title: "AI & Kubernetes",
    author: "Kaslin Fields",
    date: "May 13",
    reactions: 50,
    comments: 0,
    readTime: 6,
  },
  {
    tag: "opensource",
    title: "Maintainer Monday",
    author: "BekahHW",
    date: "May 13",
    reactions: 8,
    comments: 0,
    readTime: 2,
  },
];

// Menangani permintaan GET ke rute '/tag/:tagName' (misalnya '/tag/webdev')
app.get("/tag/:tagName", (req, res) => {
  const tagName = req.params.tagName;

  // Filter data posting berdasarkan tag yang cocok
  const filteredPosts = tagPosts.filter((post) => post.tag === tagName);

  res.render("index", { tagName, posts: filteredPosts });
});

// Menjalankan server pada port 3000
app.listen(3000, () => {
  console.log("Server berjalan pada port 3000");
});



================================

index.ejs :

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>Tag <%= tagName %>
    </title>
</head>

<body>
    <h1>Tag <%= tagName %>
    </h1>
    <ul>
        <% posts.forEach(post=> { %>
            <li>
                <h2>
                    <%= post.title %>
                </h2>
                <p>By <%= post.author %> on <%= post.date %>
                </p>
                <p>Reactions: <%= post.reactions %>
                </p>
                <p>Comments: <%= post.comments %>
                </p>
                <p>Read Time: <%= post.readTime %> min</p>
            </li>
            <% }) %>
    </ul>
</body>

</html>


=========================================
