Latihan Menampilkan Data Dari Query Ke Template Ejs

======================================================

buat data.json :

{
  "javascript": {
    "title": "JavaScript",
    "followers": 9999,
    "description": "Once relegated to the browser as one of the 3 core technologies of the web, JavaScript can now be found almost anywhere you find code. JavaScript developers move fast and push software development forward; they can be as opinionated as the frameworks they use, so let's keep it clean here and make it a place to learn from each other!",
    "img": "https://res.cloudinary.com/practicaldev/image/fetch/s--e4kQ9nis--/c_limit,f_auto,fl_progressive,q_80,w_64/https://dev-to-uploads.s3.amazonaws.com/uploads/badge/badge_image/16/js-badge.png",
    "posts": [
      {
        "title": "Mastering JavaScript in 100 Days: A Structured Plan for Proficiency",
        "author": "Abishek Haththakage"
      },
      {
        "title": "A Beginner's Guide to Creating a RESTful API with Node.js",
        "author": "Abishek Haththakage"
      }
    ]
  },
  "react": {
    "title": "React.js",
    "followers": 1200,
    "description": "Official tag for Facebook's React JavaScript library for building user interfaces.",
    "img": "https://res.cloudinary.com/practicaldev/image/fetch/s--1hWNUxma--/c_limit,f_auto,fl_progressive,q_80,w_64/https://dev-to-uploads.s3.amazonaws.com/uploads/badge/badge_image/26/react-sticker.png",
    "posts": [
      {
        "title": "What is Strict Mode in React?",
        "author": "Code of Relevancy"
      },
      {
        "title": "Build AI Template Engine to create amazing content with Next.js and ChatGPT",
        "author": "Yuval"
      }
    ]
  },
  "node": {
    "title": "Node.js",
    "followers": 4500,
    "description": "A JavaScript runtime built on Chrome's V8 JavaScript engine.",
    "posts": [
      {
        "title": "A Beginner's Guide to Creating a RESTful API with Node.js",
        "author": "Abishek Haththakage"
      },
      {
        "title": "Functional Programming Made Easy with TypeScript",
        "author": "Francisco Mendes"
      }
    ]
  }
}


================================

index.js : 

const express = require("express");
const app = express();
const data = require("./data.json");

// Set mesin template EJS
app.set("view engine", "ejs");

// Menangani permintaan GET ke rute utama '/'
app.get("/", (req, res) => {
  res.render("index", { data });
  console.log(data); //menampilkan data json
});

// Menjalankan server pada port 3000
app.listen(3000, () => {
  console.log("Server berjalan pada port 3000");
});


=======================================================

index.ejs :

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>Data Tags</title>
</head>

<body>
    <h1>Data Tags</h1>

    <ul>
        <% Object.entries(data).forEach(([tag, info])=> { %>
            <li>
                <h2>
                    <%= info.title %>
                </h2>
                <p>Followers: <%= info.followers %>
                </p>
                <p>
                    <%= info.description %>
                </p>
                <% if (info.img) { %>
                    <img src="<%= info.img %>" alt="<%= info.title %>">
                    <% } %>

                        <h3>Posts:</h3>
                        <ul>
                            <% info.posts.forEach(post=> { %>
                                <li>
                                    <h4>
                                        <%= post.title %>
                                    </h4>
                                    <p>Author: <%= post.author %>
                                    </p>
                                </li>
                                <% }) %>
                        </ul>
            </li>
            <% }) %>
    </ul>
</body>

</html>


======================================
